<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>heap on Hackliza</title>
    <link>https://hackliza.gal/tags/heap/</link>
    <description>Recent content in heap on Hackliza</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>gl</language>
    <lastBuildDate>Sat, 21 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hackliza.gal/tags/heap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Análise do heap con radare2</title>
      <link>https://hackliza.gal/posts/r2heap/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hackliza.gal/posts/r2heap/</guid>
      <description>Boas xente.
 Neste post, vou mostrar como se pode utilizar radare2 para facer análises do heap da glibc. A miña intención é crear unha referencia con exemplos, que permita coñecer que se pode levar a cabo con radare2. Fago isto xa que non atopei moito ao respecto en internet, soamente a presentación do módulo de heap feita por n4x0r na r2con 2016.  Sen embargo, eu son un amante do texto, así que deixarei aquí plasmados os comandos de radare2 con exemplos, listos para ser consultados e copipasteados.</description>
    </item>
    
  </channel>
</rss>