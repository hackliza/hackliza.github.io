<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>libfuzzer on Hackliza</title>
    <link>https://hackliza.gal/tags/libfuzzer/</link>
    <description>Recent content in libfuzzer on Hackliza</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>gl</language>
    <lastBuildDate>Fri, 16 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hackliza.gal/tags/libfuzzer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Usando libfuzzer en proxectos compilados con autotools</title>
      <link>https://hackliza.gal/posts/libfuzzer_autotools/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hackliza.gal/posts/libfuzzer_autotools/</guid>
      <description>Boas xente.
 Estes días estiven xogando con libfuzzer, unha ferramenta incorporada no compilador clang que nos permite fuzzear un programa que se compile con clang. O fuzzing é pasarlle datos (pseudo-)aleatorios a un programa e ver se casca.
 Para facer isto con libfuzzer, tes que definir no programa unha función chamada LLVMFuzzerTestOneInput que acepte un buffer de bytes que libfuzzer invocará en repetidamente en bucle pasando diferentes datos.</description>
    </item>
    
  </channel>
</rss>